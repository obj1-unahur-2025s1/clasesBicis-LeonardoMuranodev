import bicis.*

describe {
    
    //Bicicletas
    const bici1 = new Bici(rodado=28,largo=150,marca="Olmo")
    const bici2 = new Bici(rodado=26,largo=110,marca="Legnano")
    const bici3 = new Bici(rodado=20,largo=90,marca="Legnano")

    //Accesorios
    farolito = new Farolito()
    canasto = new Canasto(volumen=8)
    morral21 = new Morral(largo=21, tieneOjoDeGato=true)
    morral6 = new Morral(largo=6, tieneOjoDeGato=false)

    method initialize {
        bici1.agregarAccesorios([farolito])
        bici2.agregarAccesorios([farolito, canasto, morral21])
        bici3.agregarAccesorios([morral6])
    }

    test "LA bici1 tiene altura 85, velocidad crucero 34, carga 0, peso 14.5, tiene
    luz y tiene un accesorio liviano" {
        assert.equals(85, bici1.altura())
        assert.equals(34, bici1.velCrucero())
        assert.equals(0, bici1.carga())
        assert.equals(14.5, bici1.peso())
        assert.that(bici1.tieneLuz())
        assert.equals(1, bici1.cantAccesoriosLivianos())
    }

    test "LA bici2 tiene altura 80, velocidad crucero 28, carga 23, peso 15.5, tiene
    luz y tiene dos accesorios livianos" {
        assert.equals(80, bici2.altura())
        assert.equals(28, bici2.velCrucero())
        assert.equals(23, bici2.carga())
        assert.equals(15.5, bici2.peso())
        assert.that(bici2.tieneLuz())
        assert.equals(2, bici2.cantAccesoriosLivianos())
    }

    test "LA bici3 tiene altura 65, velocidad crucero 22, carga 2, peso 11.2, no 
    tiene luz y no tiene dos  livianos" {
        assert.equals(65, bici3.altura())
        assert.equals(22, bici3.velCrucero())
        assert.equals(2, bici3.carga())
        assert.equals(11.2, bici3.peso())
        assert.notThat(bici3.tieneLuz())
        assert.equals(0, bici3.cantAccesoriosLivianos())
    }
}